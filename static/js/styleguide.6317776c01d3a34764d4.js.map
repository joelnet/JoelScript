{"version":3,"sources":["webpack:///./styleguide.mdx"],"names":["MDXContent","props","layout","React","Component","this","components","name","parentName"],"mappings":"45CAQqBA,E,YACnB,WAAYC,GAAQ,IAAD,S,4FAAA,UACjB,wBAAMA,KACDC,OAAS,KAFG,E,uPADmBC,IAAMC,W,uCAKlC,IAAD,EAC0BC,KAAKJ,MAA9BK,EADD,EACCA,WADD,oBAGP,OAAO,kBAAC,SAAD,CACEC,KAAK,UAELD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,KAAKD,WAAYA,EAAYL,MAAO,CAAC,GAAK,gBAAvD,eACrC,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,oCAA8E,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,SAA9E,KACA,kBAAC,SAAD,CAAQD,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,0DAM3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,kDACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,gGAM3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,oJAA8L,kBAAC,SAAD,CAAQC,KAAK,IAAID,WAAYA,EAAYE,WAAW,IAAIP,MAAO,CAAC,KAAO,yDAAvE,QAA9L,KACA,kBAAC,SAAD,CAAQM,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,gDAM3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,2BACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,wLAY3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,uJACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,+YAY3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,aAAaD,WAAYA,EAAYE,WAAW,KAA7D,UAAzC,6JACA,kBAAC,SAAD,CAAQD,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,mLAc3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,6BACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,sFAQ3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,sFACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,4EAM3C,kBAAC,SAAD,CAAQM,KAAK,IAAID,WAAYA,GAA7B,mBACA,kBAAC,SAAD,CAAQC,KAAK,MAAMD,WAAYA,GAAY,kBAAC,SAAD,CAAQC,KAAK,OAAOD,WAAYA,EAAYE,WAAW,MAAMP,MAAO,CAAC,UAAY,wBAAjF,qE","file":"static/js/styleguide.e770734b.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"style-guide\"}}>{`Style Guide`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`All values must be declared with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`const`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nlet value = {}\n\n// GOOD\nconst value = {}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Variables should be named in lower camel case.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nconst AddNumbers = x => y => x + y\n\n// GOOD\nconst addNumbers = x => y => x + y\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Expressions or Pipes and their arguments should be separated with a space. Arguments should be surrounded with parentheses. Further discussed at `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/sanctuary-js/sanctuary/issues/438\"}}>{`#438`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nadd(1)(2)\n\n// GOOD\nadd (1) (2)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Prefer String Templates`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nconst func = x => \\`Value: \\${x}\\`\n\n// GOOD\nconst func = \\$\\`Value: \\${0}\\`\n\n// BAD\nconst func = ({ prop }) => \\`Prop: \\${prop}\\`\n\n// GOOD\nconst func = \\$\\`Prop: \\${'prop'}\\`\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Following Atomic Design principles, code should be broken down into Atoms. This maximizes reusability, testability, composability, and readability.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nconst getOrdersText = ifElse (({ length }) => length > 0) (\\$\\`\\${0} orders\\`) (\\$\\`No Orders\\`)\n\n// GOOD\nconst hasOrders = ({ length }) => length > 0\nconst getOrdersText = ifElse (hasOrders) (\\$\\`\\${0} orders\\`) (\\$\\`No Orders\\`)\n\n// GOOD\nconst hasOrders = ({ length }) => length > 0\nconst ifHasOrders = ifElse (hasOrders)\nconst getOrdersText = ifHasOrders (\\$\\`\\${0} orders\\`) (\\$\\`No Orders\\`)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ifElse`}</MDXTag>{` and the condition should be on the same line. Longer statements can be broken out into multiple lines. If it is long, consider breaking it down further.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nifElse\n  (lessThan0)\n  (Math.abs)\n  (Math.sqrt)\n\n// GOOD\nifElse (lessThan0) (Math.abs) (Math.sqrt)\n\n// GOOD\nifElse (lessThan0)\n  (Math.abs)\n  (Math.sqrt)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Pipes must be multi-line.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nconst main = pipe ([ add ])\n\n// GOOD\nconst main = pipe ([\n  add\n])\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Arrays must have a space after the opening bracket and before the closing bracket.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nconst array = [1, 2, 3]\n\n// GOOD\nconst array = [ 1, 2, 3 ]\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`No semi-colons.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`// BAD\nconst value = 888;\n\n// GOOD\nconst value = 888\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}